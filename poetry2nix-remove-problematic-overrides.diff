diff '--color=auto' '--exclude=.git' -Naur poetry2nix2/overrides.nix poetry2nix/overrides.nix
--- poetry2nix2/overrides.nix	2021-04-21 15:23:53.907785808 -0700
+++ poetry2nix/overrides.nix	2021-04-21 14:37:12.035981910 -0700
@@ -815,41 +815,41 @@
 
   # Work around https://github.com/nix-community/poetry2nix/issues/244
   # where git deps are not picked up as they should
-  pip =
-    if lib.versionAtLeast super.pip.version "20.3" then
-      super.pip.overridePythonAttrs
-        (old:
-          let
-            pname = "pip";
-            version = "20.2.4";
-          in
-          {
-            name = pname + "-" + version;
-            inherit version;
-            src = pkgs.fetchFromGitHub {
-              owner = "pypa";
-              repo = pname;
-              rev = version;
-              sha256 = "eMVV4ftgV71HLQsSeaOchYlfaJVgzNrwUynn3SA1/Do=";
-              name = "${pname}-${version}-source";
-            };
-          }) else super.pip;
-
-  poetry-core = super.poetry-core.overridePythonAttrs (old: {
-    # "Vendor" dependencies (for build-system support)
-    postPatch = ''
-      echo "import sys" >> poetry/__init__.py
-      for path in $propagatedBuildInputs; do
-          echo "sys.path.insert(0, \"$path\")" >> poetry/__init__.py
-      done
-    '';
-
-    # Propagating dependencies leads to issues downstream
-    # We've already patched poetry to prefer "vendored" dependencies
-    postFixup = ''
-      rm $out/nix-support/propagated-build-inputs
-    '';
-  });
+  # pip =
+  #   if lib.versionAtLeast super.pip.version "20.3" then
+  #     super.pip.overridePythonAttrs
+  #       (old:
+  #         let
+  #           pname = "pip";
+  #           version = "20.2.4";
+  #         in
+  #         {
+  #           name = pname + "-" + version;
+  #           inherit version;
+  #           src = pkgs.fetchFromGitHub {
+  #             owner = "pypa";
+  #             repo = pname;
+  #             rev = version;
+  #             sha256 = "eMVV4ftgV71HLQsSeaOchYlfaJVgzNrwUynn3SA1/Do=";
+  #             name = "${pname}-${version}-source";
+  #           };
+  #         }) else super.pip;
+
+  # poetry-core = super.poetry-core.overridePythonAttrs (old: {
+  #   # "Vendor" dependencies (for build-system support)
+  #   postPatch = ''
+  #     echo "import sys" >> poetry/__init__.py
+  #     for path in $propagatedBuildInputs; do
+  #         echo "sys.path.insert(0, \"$path\")" >> poetry/__init__.py
+  #     done
+  #   '';
+
+  #   # Propagating dependencies leads to issues downstream
+  #   # We've already patched poetry to prefer "vendored" dependencies
+  #   postFixup = ''
+  #     rm $out/nix-support/propagated-build-inputs
+  #   '';
+  # });
 
   portend = super.portend.overridePythonAttrs (
     old: {
@@ -1512,11 +1512,11 @@
 
 
   # Stop infinite recursion by using bootstrapped pkg from nixpkgs
-  bootstrapped-pip = super.bootstrapped-pip.override {
-    wheel = (pkgs.python3.pkgs.override {
-      python = self.python;
-    }).wheel;
-  };
+  # bootstrapped-pip = super.bootstrapped-pip.override {
+  #   wheel = (pkgs.python3.pkgs.override {
+  #     python = self.python;
+  #   }).wheel;
+  # };
 
   weasyprint = super.weasyprint.overridePythonAttrs (
     old: {
